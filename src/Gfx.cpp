#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1331.h>

#include <Colors.h>
#include <Gfx.h>
#include <Pinout.h>

Adafruit_SSD1331 display = Adafruit_SSD1331(OLED_CS, OLED_DC, OLED_RST);
static const uint8_t PROGMEM logo[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe0, 0x1, 0xff, 0xff, 0xff, 0xc0, 0x1, 0x80, 0x1f, 0xc0, 0x0, 0x1f,
  0xe0, 0x0, 0xff, 0xff, 0xff, 0x80, 0x1, 0x80, 0x1f, 0x80, 0x0, 0x1f,
  0xe0, 0x0, 0x7f, 0xff, 0xff, 0x0, 0x1, 0x80, 0x1f, 0x80, 0x0, 0x1f,
  0xe0, 0x0, 0x3f, 0xff, 0xfe, 0x0, 0x1, 0x80, 0x1f, 0x80, 0x0, 0x1f,
  0xe0, 0x0, 0x1f, 0xff, 0xfc, 0x0, 0x1, 0x80, 0x1f, 0x80, 0x0, 0xf,
  0xe0, 0x0, 0xf, 0xff, 0xf8, 0x0, 0x3, 0x80, 0x1f, 0xc0, 0x0, 0x1f,
  0xfe, 0x0, 0x7, 0xff, 0xf0, 0x0, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x3f,
  0xfe, 0x4, 0x3, 0xff, 0xe0, 0x18, 0x1f, 0xf8, 0x1f, 0xff, 0x80, 0x7f,
  0xfe, 0x4, 0x1, 0xff, 0xc0, 0x10, 0x1f, 0xf8, 0x1f, 0xff, 0x0, 0xff,
  0xfe, 0x6, 0x0, 0xff, 0x80, 0x30, 0x1f, 0xf8, 0x1f, 0xfe, 0x0, 0xff,
  0xfe, 0x7, 0x0, 0x7f, 0x0, 0x70, 0x1f, 0xf8, 0x1f, 0xfe, 0x1, 0xff,
  0xfe, 0x7, 0x80, 0x3e, 0x0, 0xf0, 0x1f, 0xf8, 0x1f, 0xfc, 0x3, 0xff,
  0xfe, 0x7, 0xc0, 0x1c, 0x1, 0xf0, 0x1f, 0xf8, 0x1f, 0xf8, 0x7, 0xff,
  0xfe, 0x7, 0xe0, 0x8, 0x3, 0xf0, 0x1f, 0xf8, 0x1f, 0xf8, 0xf, 0xff,
  0xfe, 0x7, 0xf0, 0x0, 0x7, 0xf0, 0x1f, 0xf8, 0x1f, 0xf0, 0xf, 0xff,
  0xfe, 0x7, 0xf8, 0x0, 0xf, 0xf0, 0x1f, 0xf8, 0x1f, 0xe0, 0x1f, 0xff,
  0xfe, 0x7, 0xfc, 0x0, 0x1f, 0xf0, 0x1f, 0xf8, 0x1f, 0xe0, 0x3f, 0xff,
  0xfe, 0x7, 0xfe, 0x0, 0x3f, 0xf0, 0x1f, 0xf8, 0x1f, 0xc0, 0x7f, 0xff,
  0xfe, 0x7, 0xff, 0x0, 0x7f, 0xf0, 0x1f, 0xf8, 0x1f, 0x80, 0xff, 0xff,
  0xfe, 0x7, 0xff, 0x80, 0xff, 0xf0, 0x1f, 0xf8, 0x1f, 0x80, 0xff, 0xff,
  0xfe, 0x7, 0xff, 0xc1, 0xff, 0xf0, 0x1f, 0xf8, 0x1f, 0x81, 0xff, 0xff,
  0xfe, 0x7, 0xff, 0xe3, 0xff, 0xf0, 0x1f, 0xf8, 0x1f, 0x80, 0xff, 0xff,
  0xfe, 0x7, 0xef, 0xf3, 0xfb, 0xf0, 0x1f, 0xf8, 0x1f, 0x80, 0x7f, 0xff,
  0xfe, 0x7, 0xe7, 0xff, 0xf3, 0xf0, 0x1f, 0xf8, 0x1f, 0xc0, 0x7f, 0xff,
  0xfe, 0x7, 0xe3, 0xff, 0xe3, 0xf0, 0x1f, 0xf8, 0x1f, 0xe0, 0x3f, 0xff,
  0xfe, 0x7, 0xe1, 0xff, 0xc3, 0xf0, 0x1f, 0xf8, 0x1f, 0xe0, 0x1f, 0xff,
  0xfe, 0x7, 0xe0, 0xff, 0x83, 0xf0, 0x1f, 0xf8, 0x1f, 0xf0, 0xf, 0xff,
  0xfe, 0x7, 0xe0, 0x7f, 0x83, 0xf0, 0x1f, 0xf8, 0x1f, 0xf8, 0x7, 0xff,
  0xfc, 0x7, 0xe0, 0x7f, 0x3, 0xf0, 0x1f, 0xf8, 0x1f, 0xfc, 0x3, 0xff,
  0xfe, 0x7, 0xe0, 0x7f, 0x3, 0xf0, 0x1f, 0xf8, 0x1f, 0xfe, 0x1, 0xff,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1, 0xff,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0xff,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f,
  0xff, 0xff, 0xe0, 0x7f, 0x3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf,
  0xe0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xc0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xc0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xc0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xc0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xc0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff,
  0xe7, 0xfe, 0x7f, 0xfc, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff,
  0xe3, 0xfc, 0x3f, 0xfc, 0xf0, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff,
  0xe1, 0xfc, 0x3f, 0xfc, 0xf1, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff,
  0xe1, 0xf8, 0x39, 0x9c, 0xe3, 0xfc, 0x3f, 0xe1, 0xf8, 0x83, 0xf8, 0x3f,
  0xe0, 0xf8, 0x38, 0x1c, 0xc7, 0xf0, 0xf, 0x80, 0x78, 0x1, 0xf0, 0x1f,
  0xe0, 0xf8, 0x38, 0x1c, 0x8f, 0xe1, 0x8f, 0xc, 0x38, 0x30, 0xe3, 0xf,
  0xe0, 0xf0, 0x38, 0xfc, 0x1f, 0xe3, 0xc7, 0x1e, 0x38, 0x78, 0xe3, 0x8f,
  0xe6, 0x72, 0x38, 0xfc, 0x1f, 0xc7, 0xc7, 0x3f, 0x38, 0xfc, 0x61, 0xff,
  0xe2, 0x62, 0x38, 0xfc, 0x1f, 0xc0, 0x6, 0x0, 0x38, 0xfc, 0x70, 0x3f,
  0xe2, 0x26, 0x38, 0xfc, 0x8f, 0xc0, 0x6, 0x0, 0x38, 0xfc, 0x7c, 0x1f,
  0xe3, 0x6, 0x38, 0xfc, 0xc7, 0xc7, 0xff, 0x3f, 0xf8, 0xfc, 0xff, 0x8f,
  0xe3, 0xe, 0x38, 0xfc, 0xe3, 0xe3, 0xc7, 0x1e, 0x38, 0x78, 0xe3, 0x8f,
  0xe3, 0x8e, 0x38, 0xfc, 0xf1, 0xf0, 0xf, 0x80, 0x78, 0x1, 0xe0, 0xf,
  0xe3, 0x8e, 0x38, 0xfc, 0xf8, 0xf8, 0x1f, 0xc0, 0xf8, 0x83, 0xf0, 0x1f,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0x7f, 0xf3, 0xff, 0xcf, 0xfc, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
};

void initScreen() {
  display.begin();
}

void clearScreen() {
  display.fillScreen(BLACK);
}

void clearArea(int x, int y, int w, int h, int color) {
  display.fillRect(x, y, w, h, color);
}

void box(int x, int y, int w, int h, int color) {
  display.drawRect(x, y, w, h, color);
}

void displayLogo() {
  display.fillScreen(DKBLUE);
  display.drawBitmap(0, 0, logo, 96, 64, BLACK);
  delay(2000);

  display.fillScreen(BLACK);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  banner("MrBreaker", 0, 20, 96, 10, 1, WHITE, BLACK);
  banner("v1.0", 0, 30, 96, 10, 0, WHITE, BLACK);
  delay(2000);

  // display.fillScreen(BLACK);
  // display.setTextColor(BLACK);
  // display.setTextSize(1);
  // display.fillRect(0, 0, 96, 12, WHITE);
  // display.setCursor(2, 1);
  // display.print("MrBreaker");
  // display.setCursor(3, 1);
  // display.print("MrBreaker");
}

void writeSmall(int x, int y, String text, int color) {
  display.setTextColor(color);
  display.setTextSize(1);
  display.setCursor(x, y);
  display.print(text);
}

void banner(String text, int x, int y, int xw, int yh, int bold, int fgcolor, int bgcolor)
{
  int16_t x1, y1;
  uint16_t w, h;
  int len = text.length() + 1;
  char char_array[len];
  text.toCharArray(char_array, len);
  display.getTextBounds(char_array, x, y, &x1, &y1, &w, &h);

  int midx = x + (xw / 2);
  int midy = y + (yh / 2);
  int tx = midx - (w / 2);
  int ty = midy - (h / 2);

  display.fillRect(x, y, xw, yh, bgcolor);
  display.setTextColor(fgcolor);
  display.setCursor(tx, ty);
  display.print(text);
  if (bold == 1) {
    display.setCursor(tx + 1, ty);
    display.print(text);
  }
}

